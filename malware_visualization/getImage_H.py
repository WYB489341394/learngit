import os
import cv2

import numpy as np
import pefile

# get the width of final Image By the size of malware
def getWidthFIle(InputPath):
    length = os.path.getsize(InputPath)
    if length < 10000:
        return 32
    elif length >= 10000 and length < 30000:
        return 64
    elif length >= 30000 and length < 60000:
        return 128
    elif length >= 60000 and length < 100000:
        return 256
    elif length >= 100000 and length < 200000:
        return 384
    elif length >= 200000 and length < 500000:
        return 512
    elif length >= 500000 and length < 1000000:
        return 768
    else:
        return 1024
# get the width of final Image By the size of Section ".Text"
def getWidthStr(Input):
    length = len(Input)
    if length < 10000:
        return 32
    elif length >= 10000 and length < 30000:
        return 64
    elif length >= 30000 and length < 60000:
        return 128
    elif length >= 60000 and length < 100000:
        return 256
    elif length >= 100000 and length < 200000:
        return 384
    elif length >= 200000 and length < 500000:
        return 512
    elif length >= 500000 and length < 1000000:
        return 768
    else:
        return 1024

# get Immage file by malware Hex Code
def getImage(InputfilePath,OutputfilePath):
    PEfile_Path = InputfilePath

    # # Get All HEX code of the executable file
    # data = ""
    # f = open(PEfile_Path,'rb')
    # filedata = f.readlines()
    # for line in filedata:
    #     data += line.encode('hex')
    # width = getWidthFIle(PEfile_Path)

    # Get all HEX code of the ".text" section
    text = '.text'
    data = ""
    pe = pefile.PE(PEfile_Path)
    for section in pe.sections:
        if text in section.Name:
            # print 'got it'
            # print hex(section.PointerToRawData), hex(section.SizeOfRawData)  # section.Misc_VirtualSize
            dataCode = pe.get_data(section.PointerToRawData, section.Misc_VirtualSize)
            data += dataCode.encode('hex')

    width = getWidthStr(data)
    # DataStr is the Hex String of malwhre all Hex code or ".Text" hex Code
    DataStr = data
    if len(DataStr)%2 != 0:
        DataStr = DataStr + '0'

    # group the String into groups which contains two character
    image = np.zeros(len(DataStr) / 2, np.uint8)
    # print image

    # get Decimal number of Hexadecimal number
    for i in range(0, len(DataStr), 2):
        image[i/2] = int(DataStr[i:i + 2], 16)
        # print image[i/2]


    #————————————————————————————————————————————？？？？？？？？



    # reshape by the width get previous
    image.resize((len(image)+width)/width,width)
    # print image

    cv2.imwrite(OutputfilePath,image)

if __name__ == '__main__':
    malwarePath = r'E:\test\10virtus'
    imagePath = r'E:\test\10virtusImage'
    number = 0

    # make folder that all Image in
    if not os.path.isdir(imagePath):
        os.makedirs(imagePath)

    # Traverse all files and get the Image of the corresponding one
    list_dirs = os.walk(malwarePath)
    for root, dirs, files in list_dirs:
        for d in dirs:
            if not os.path.isdir(os.path.join(imagePath, d)):
                os.makedirs(os.path.join(imagePath, d))

        for f in files:
            pathPart = root.split("\\")
            ImageFamilyPath = os.path.join(imagePath, pathPart[len(pathPart) - 1])
            ImageFilePath = os.path.join(ImageFamilyPath, f)
            print os.path.join(root, f)
            # print ImageFilePath
            try:
                getImage(os.path.join(root, f), ImageFilePath+'.jpg')
            except:
                # show Messages "!!!" when can`t translate malware to Image
                print os.path.join(root, f) + '!!!--> ".jpg"'
                number = number + 1

    print 'Finish! number of the lost samples is ' + str(number)
    os.system('pause')
