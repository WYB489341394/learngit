import os
import subprocess
import shutil
import time

"""
This process aims to disassembly PE virtus,
and save them in appointed file,both '.asm' and '.idb'.
"""

if __name__ == '__main__':
    time_start=time.time()

    # save the backup path
    # file_path = r'F:\virtus_test\10virtus'
    # ida_path = r'E:\IDA 7.2\ida.exe'
    # asm_path = r'F:\virtus_test\10virtus_asm'
    # idb_path = r'F:\virtus_test\10virtus_idb'


    # the test path
    file_path = r'F:\virtus_test\3virtus'
    ida_path = r'E:\IDA 7.2\ida.exe'
    asm_path = r'F:\virtus_test\3virtus_asm'
    idb_path = r'F:\virtus_test\3virtus_idb'

    if not os.path.isdir(asm_path):
        os.makedirs(asm_path)
    if not os.path.isdir(idb_path):
        os.makedirs(idb_path)

    list_dirs = os.walk(file_path)
    lostnum=0


    for root, dirs, files in list_dirs:
        for d in dirs:
            if not os.path.isdir(os.path.join(asm_path, d)):
                os.makedirs(os.path.join(asm_path, d))
            if not os.path.isdir(os.path.join(idb_path, d)):
                os.makedirs(os.path.join(idb_path, d))

        for f in files:
            virtus_file_name=os.path.join(root, f)
            print virtus_file_name + ' is turning.'

            try:
                if virtus_file_name.endswith(".idb") or virtus_file_name.endswith(".asm"):
                    print virtus_file_name," is asm or idb."
                    continue
                subprocess.call([ida_path, "-B", virtus_file_name])

                pathPart = root.split("\\")
                # print pathPart
                Virtus_asm_FamilyPath = os.path.join(asm_path, pathPart[-1])
                Virtus_idb_FamilyPath = os.path.join(idb_path, pathPart[-1])
                turned_file = virtus_file_name + '.asm'
                shutil.move(turned_file, Virtus_asm_FamilyPath)
                turned_file = virtus_file_name + '.idb'
                shutil.move(turned_file, Virtus_idb_FamilyPath)
                print virtus_file_name + ' is processed.'
            except:
                print virtus_file_name, 'is lost.'
                lostnum = lostnum + 1


    print 'OVER!'
    print 'The lostnum is ',lostnum



    time_end=time.time()

    print'Time cost is ',(time_end-time_start)/60,'min'



